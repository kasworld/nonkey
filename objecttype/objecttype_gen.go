// Code generated by "genenum.exe -typename=ObjectType -packagename=objecttype -basedir=."

package objecttype

import "fmt"

type ObjectType uint8

const (
	NULL         ObjectType = iota // NULL
	INTEGER                        // INTEGER
	FLOAT                          // FLOAT
	BOOLEAN                        // BOOLEAN
	RETURN_VALUE                   // RETURN_VALUE
	ERROR                          // ERROR
	FUNCTION                       // FUNCTION
	STRING                         // STRING
	BUILTIN                        // BUILTIN
	ARRAY                          // ARRAY
	HASH                           // HASH
	FILE                           // FILE
	REGEXP                         // REGEXP
	//

	ObjectType_Count int = iota
)

var _ObjectType2string = [ObjectType_Count][2]string{
	NULL:         {"NULL", "NULL"},
	INTEGER:      {"INTEGER", "INTEGER"},
	FLOAT:        {"FLOAT", "FLOAT"},
	BOOLEAN:      {"BOOLEAN", "BOOLEAN"},
	RETURN_VALUE: {"RETURN_VALUE", "RETURN_VALUE"},
	ERROR:        {"ERROR", "ERROR"},
	FUNCTION:     {"FUNCTION", "FUNCTION"},
	STRING:       {"STRING", "STRING"},
	BUILTIN:      {"BUILTIN", "BUILTIN"},
	ARRAY:        {"ARRAY", "ARRAY"},
	HASH:         {"HASH", "HASH"},
	FILE:         {"FILE", "FILE"},
	REGEXP:       {"REGEXP", "REGEXP"},
}

func (e ObjectType) String() string {
	if e >= 0 && e < ObjectType(ObjectType_Count) {
		return _ObjectType2string[e][0]
	}
	return fmt.Sprintf("ObjectType%d", uint8(e))
}

func (e ObjectType) CommentString() string {
	if e >= 0 && e < ObjectType(ObjectType_Count) {
		return _ObjectType2string[e][1]
	}
	return ""
}

var _string2ObjectType = map[string]ObjectType{
	"NULL":         NULL,
	"INTEGER":      INTEGER,
	"FLOAT":        FLOAT,
	"BOOLEAN":      BOOLEAN,
	"RETURN_VALUE": RETURN_VALUE,
	"ERROR":        ERROR,
	"FUNCTION":     FUNCTION,
	"STRING":       STRING,
	"BUILTIN":      BUILTIN,
	"ARRAY":        ARRAY,
	"HASH":         HASH,
	"FILE":         FILE,
	"REGEXP":       REGEXP,
}

func String2ObjectType(s string) (ObjectType, bool) {
	v, b := _string2ObjectType[s]
	return v, b
}
